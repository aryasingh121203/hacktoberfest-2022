#include<bits/stdc++.h>
using namespace std;

const int N=5e3+1e2+7;

int T;

int n,m;

long long f[N][N][2];

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin>>T;
	while(T--)
	{
		int n,x,y;
		cin>>n>>x>>y;
		string s,t;
		vector<int>v;
		cin>>s>>t;
		for(int i=0;i<n;i++)
			if(s[i]!=t[i])
				v.push_back(i);
		if(v.size()&1)
		{
			cout<<"-1\n";
			continue;
		}
		if(y<=x)
		{
			long long ans=0;
			if(v.size()>2||v.size()==0||(v[0]+1!=v[1]))
			{
				ans=1ll*v.size()/2*y;
				cout<<ans<<"\n";
			}
			else
			{
				ans=min(2*y,x);
				cout<<ans<<"\n";
			}
		}
		else
		{
			vector<int>a(n+1);
			for(int i=1;i<=n;i++)
				if(s[i-1]!=t[i-1])
					a[i]=1;
				else
					a[i]=0;
			for(int j=0;j<=n;j++)
				for(int i=0;i<=n;i++)
					for(int k=0;k<2;k++)
						f[i][j][k]=1e15;
			f[0][0][0]=0;
			f[0][0][1]=1e15;
			for(int i=0;i<n;i++)
				for(int j=0;j<=i;j++)
					for(int k=0;k<2;k++)
					{
						int ni,nj,nk;
						ni=i+1;
						//pair with i - 1
						nj=(k^1)+j;
						nk=(a[i+1]^1);
						f[ni][nj][nk]=min(f[ni][nj][nk],f[i][j][k]+x);
						//pair with some previous 1
						if(j)
						{
							nj=k+j-1;
							nk=(a[i+1]^1);
							f[ni][nj][nk]=min(f[ni][nj][nk],f[i][j][k]+y);
						}
						//pair with nothing
						nj=(k)+j;
						nk=(a[i+1]);
						f[ni][nj][nk]=min(f[ni][nj][nk],f[i][j][k]);
					}
			cout<<f[n][0][0]<<"\n";
		}
	}
}
